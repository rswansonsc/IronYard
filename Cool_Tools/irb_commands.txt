$ irb
2.1.1 :001 >

Here are all the command/variables in the irb (TAB, TAB gets list)
Display all 337 possibilities? (y or n)
!                              eql?
!=                             equal?
!~                             eval
<=>                            exec
==                             exit
===                            exit!
=~                             extend
@prompt                        fail
ARGF                           false
ARGV                           fg
ArgumentError                  for
Array                          fork
BEGIN                          format
BasicObject                    freeze
Bignum                         frozen?
Binding                        gem
CROSS_COMPILING                gem_original_require
Class                          gets
Comparable                     global_variables
Complex                        hash
ConditionVariable              help
Config                         if
Data                           in
Date                           include
Dir                            initialize
END                            initialize_clone
ENV                            initialize_copy
EOFError                       initialize_dup
Encoding                       inspect
EncodingError                  install_alias_method
Enumerable                     instance_eval
Enumerator                     instance_exec
Errno                          instance_of?
Exception                      instance_variable_defined?
Exception2MessageMapper        instance_variable_get
FALSE                          instance_variable_set
FalseClass                     instance_variables
Fiber                          irb
FiberError                     irb_binding
File                           irb_bindings
FileTest                       irb_cb
Fixnum                         irb_change_binding
Float                          irb_change_workspace
FloatDomainError               irb_chws
GC                             irb_context
Gem                            irb_current_working_binding
Hash                           irb_current_working_workspace
IO                             irb_cwb
IOError                        irb_cws
IRB                            irb_cwws
IndexError                     irb_exit
Integer                        irb_exit_org
Interrupt                      irb_fg
Kernel                         irb_help
KeyError                       irb_jobs
LoadError                      irb_kill
LocalJumpError                 irb_load
Marshal                        irb_pop_binding
MatchData                      irb_pop_workspace
Math                           irb_popb
Method                         irb_popws
Module                         irb_print_working_binding
Monitor                        irb_print_working_workspace
MonitorMixin                   irb_push_binding
Mutex                          irb_push_workspace
NIL                            irb_pushb
NameError                      irb_pushws
NilClass                       irb_pwb
NoMemoryError                  irb_pwws
NoMethodError                  irb_quit
NotImplementedError            irb_require
Numeric                        irb_source
Object                         irb_workspaces
ObjectSpace                    is_a?
Proc                           iterator?
Process                        jobs
Queue                          kill
RUBYGEMS_ACTIVATION_MONITOR    kind_of?
RUBY_COPYRIGHT                 lambda
RUBY_DESCRIPTION               load
RUBY_ENGINE                    local_variables
RUBY_PATCHLEVEL                loop
RUBY_PLATFORM                  method
RUBY_RELEASE_DATE              method_missing
RUBY_REVISION                  methods
RUBY_VERSION                   module
Random                         next
Range                          nil
RangeError                     nil?
Rational                       not
RbConfig                       object_id
Readline                       open
Regexp                         or
RegexpError                    p
RubyLex                        popb
RubyToken                      popws
RubyVM                         print
RuntimeError                   printf
STDERR                         private
STDIN                          private_methods
STDOUT                         proc
ScriptError                    protected_methods
SecurityError                  public
Signal                         public_method
SignalException                public_methods
SizedQueue                     public_send
StandardError                  pushb
StopIteration                  pushws
String                         putc
Struct                         puts
Symbol                         pwws
SyntaxError                    quit
SystemCallError                raise
SystemExit                     rand
SystemStackError               readline
TOPLEVEL_BINDING               readlines
TRUE                           redo
Thread                         remove_instance_variable
ThreadError                    require
ThreadGroup                    require_relative
Time                           rescue
TracePoint                     respond_to?
TrueClass                      respond_to_missing?
TypeError                      retry
UnboundMethod                  return
ZeroDivisionError              select
_                              self
__callee__                     send
__dir__                        set_trace_func
__id__                         singleton_class
__method__                     singleton_method
__send__                       singleton_method_added
`                              singleton_method_removed
abort                          singleton_method_undefined
alias                          singleton_methods
and                            sleep
at_exit                        source
autoload                       spawn
autoload?                      sprintf
begin                          srand
binding                        super
bindings                       syscall
block_given?                   system
break                          taint
caller                         tainted?
caller_locations               tap
case                           test
catch                          then
cb                             throw
chws                           to_enum
class                          to_s
clone                          trace_var
conf                           trap
context                        true
cws                            trust
cwws                           undef
def                            unless
default_src_encoding           untaint
define_method                  until
define_singleton_method        untrace_var
defined                        untrust
display                        untrusted?
do                             using
dup                            warn
else                           when
elsif                          while
end                            workspaces
ensure                         yield
enum_for